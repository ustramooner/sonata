name: Linux-Cross

on:
  workflow_dispatch:
  push:
    branches: [ piper_tetun ]
  pull_request:
    branches: [ piper_tetun ]

jobs:
  build:
    runs-on: ubuntu-22.04
    name: "build: ${{ matrix.os }} ${{ matrix.arch }}: ${{ matrix.compiler }}"
    strategy:
      fail-fast: false
      matrix:
        arch: [x64]

    steps:

      # PREP libtorch
      - name: âš¡ Prepare libtorch 
        uses: actions/cache@v4
        id: libtorch
        with:
          path: libtorch
          key: https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-2.1.0%2Bcpu.zip
      - name: âš¡ Download libtorch 
        if: steps.libtorch.outputs.cache-hit != 'true'
        run: curl -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-shared-with-deps-2.1.0%2Bcpu.zip
      - name: âš¡ Extract libtorch
        if: steps.libtorch.outputs.cache-hit != 'true'
        run: unzip -qq libtorch.zip -d libtorch
      - name: check
        run: ls /home/runner/work/sonata/sonata/libtorch/libtorch/include/torch

      - name: âš¡ Install Prerequisites
        run: |
          #wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -
          #sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-15 main"
          sudo apt update
          sudo apt install -y llvm libclang-dev

      - name: âš¡ Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Run cargo build
      - name: âš¡ Cargo Cache
        uses: actions/cache@v4
        with:
          path: ~/.cargo
          save-always: true
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo
      - name: âš¡ Cargo Target Cache
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.toml') }}
            ${{ runner.os }}-cargo-target
      - name: ðŸ”¨Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
        env:
          LIBTORCH: ${{github.workspace}}/libtorch/libtorch/

